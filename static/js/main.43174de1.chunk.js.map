{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","App.tsx","index.tsx","theme.ts"],"names":["BASE_URL","OHLCV_URL","fetchCoins","fetch","then","response","json","fetchCoinHistory","coinId","Math","floor","Date","now","Chart","useQuery","refetchInterval","isLoading","data","type","series","name","map","price","close","options","theme","mode","chart","height","width","toolbar","show","background","grid","stroke","curve","yaxis","xaxis","axisBorder","axisTicks","labels","categories","Number","time_close","toISOString","fill","gradient","gradientToColors","stops","colors","tooltip","y","formatter","value","toFixed","Container","styled","div","Item","Title","CoinDate","CoinPrice","Price","sortHighData","sort","a","b","high","sortLowData","low","length","toLocaleDateString","ButtonArea","StyledLink","Link","h1","props","accentColor","Loader","span","Header","header","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","textColor","Coin","useParams","state","useLocation","useState","priceMatch","useRouteMatch","chartMatch","fetchCoinInfo","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","loading","Helmet","to","viewBox","d","rank","symbol","quotes","USD","description","total_supply","max_supply","path","CoinsList","ul","li","bgColor","Img","img","Coins","slice","coin","pathname","id","src","toLowerCase","Router","GlobalStyle","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"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","file":"static/js/main.43174de1.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\nconst OHLCV_URL = `https://ohlcv-api.nomadcoders.workers.dev`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n  return fetch(\n    `${OHLCV_URL}/?coinId=${coinId}`\n  ).then((response) => response.json());\n}\n","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\ninterface ChartProps {\n  coinId: string;\n}\nfunction Chart({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId], () =>\n    fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n  return(\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexChart\n          type=\"line\"\n          series={[\n            {\n              name: \"Price\",\n              data: data?.map((price) => price.close) ?? [],\n            },\n          ]}\n          options={{\n            theme: {\n              mode: \"dark\",\n            },\n            chart: {\n              height: 300,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            grid: { show: false },\n            stroke: {\n              curve: \"smooth\",\n              width: 4,\n            },\n            yaxis: {\n              show: false,\n            },\n            xaxis: {\n              axisBorder: { show: false },\n              axisTicks: { show: false },\n              labels: { show: false },\n              type: \"datetime\",\n              categories: data?.map((price) => new Date(Number(price.time_close) * 1000).toISOString()),\n            },\n            fill: {\n              type: \"gradient\",\n              gradient: { gradientToColors: [\"#0be881\"], stops: [0, 100] },\n            },\n            colors: [\"#0fbcf9\"],\n            tooltip: {\n              y: {\n                formatter: (value) => `$${value.toFixed(2)}`,\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\nexport default Chart;\n","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { fetchCoinHistory } from \"../api\";\n\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\ninterface ChartProps {\n  coinId: string;\n}\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-rows: repeat(3, 1fr);\n  gap: 10px;\n  border-radius: 10px;\n  padding: 10px;\n  background-color: rgba(0, 0, 0, 0.5);\n`\n\nconst Item = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst Title = styled.div`\n  flex-basis: 60px;\n`\n\nconst CoinDate = styled.div`\n  flex-grow: 1;\n  text-align: center;\n`\n\nconst CoinPrice = styled.div`\n  flex-grow: 1;\n  text-align: center;\n`\n\nfunction Price({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>([\"ohlcv\", coinId], () =>\n    fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n\n  const sortHighData = data?.sort((a, b) => {\n    return a.high - b.high;\n  });\n  const sortLowData = data?.sort((a, b) => {\n    return a.low - b.low;\n  });\n  \n  return (\n    <div>\n      {isLoading ? \"Loading chart...\" : (\n        <Container>\n          <Item>\n            <Title></Title>\n            <CoinDate>날짜</CoinDate>\n            <CoinPrice>가격</CoinPrice>\n          </Item>\n          <Item>\n            <Title>최고가</Title>\n            <CoinDate>\n              {sortHighData && sortHighData.length > 0 \n                ? new Date(Number(sortHighData[sortHighData.length - 1].time_close) * 1000).toLocaleDateString()\n                : \"N/A\"\n              }\n            </CoinDate>\n            <CoinPrice>{sortHighData?.[sortHighData.length - 1].high}</CoinPrice>\n          </Item>\n          <Item>\n            <Title>최저가</Title>\n            <CoinDate>\n              {sortLowData && sortLowData.length > 0 \n                ? new Date(Number(sortLowData[0].time_close) * 1000).toLocaleDateString()\n                : \"N/A\"\n              }</CoinDate>\n            <CoinPrice>{sortLowData?.[0].low}</CoinPrice>\n          </Item>\n      </Container>\n      )}\n    </div>\n  )\n}\n\nexport default Price;\n","import { useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\n\nconst ButtonArea = styled.div`\n  position: absolute;\n  top: 50px;\n  left: 10px;\n`\n\nconst StyledLink = styled(Link)`\n  display: block;\n  width: 30px;\n  height: 30px;\n`\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 33%;\n\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n    padding: 7px 0px;\n  }\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Coin() {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const [info, setInfo] = useState<InfoData>();\n  const [priceInfo, setPriceInfo] = useState<PriceData>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  const {isLoading: infoLoading, data: infoData} = useQuery<InfoData>([\"info\", coinId], () => fetchCoinInfo(coinId));\n  const {isLoading: tickersLoading, data: tickersData} = useQuery<PriceData>([\"tickers\", coinId], () => fetchCoinTickers(coinId), {\n    refetchInterval: 5000,\n  });\n  const loading = infoLoading || tickersLoading;\n\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <ButtonArea>\n          <StyledLink to=\"/React\">\n            <svg fill=\"currentColor\" viewBox=\"0 0 20 20\"><path d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm.707-10.293a1 1 0 00-1.414-1.414l-3 3a1 1 0 000 1.414l3 3a1 1 0 001.414-1.414L9.414 11H13a1 1 0 100-2H9.414l1.293-1.293z\" clip-rule=\"evenodd\" fill-rule=\"evenodd\"></path>\n            </svg>\n          </StyledLink>\n        </ButtonArea>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${tickersData?.quotes.USD.price.toFixed(3)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/React/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/React/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/React/:coinId/price`}>\n              <Price coinId={coinId}/>\n            </Route>\n            <Route path={`/React/:coinId/chart`}>\n              <Chart coinId={coinId}/>\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;\n","import { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\nimport { Helmet } from \"react-helmet\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: white;\n  color: ${(props) => props.theme.bgColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\n  return (\n    <Container>\n      <Helmet>\n        <title>코인</title>\n      </Helmet>\n      <Header>\n        <Title>코인</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 100).map((coin) => (\n            <Coin key={coin.id}>\n              <Link to={{\n                pathname: `/React/${coin.id}`,\n                state: {name: coin.name}\n              }}>\n                <Img src={`https://cryptoicon-api.pages.dev/api/icon/${coin.symbol.toLowerCase()}`} />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;","import {BrowserRouter, Switch, Route} from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/React/:coinId\">\n          <Coin />\n        </Route>\n        <Route path=\"/React\">\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default Router;\n","import { createGlobalStyle } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration:none;\n  color:inherit\n}`\n\nfunction App() {\n  return <>\n    <GlobalStyle />\n    <Router />\n    <ReactQueryDevtools initialIsOpen={true} />\n  </>;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { theme } from \"./theme\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"#f5f6fa\",\n  accentColor: \"#9c88ff\",\n};\n"],"sourceRoot":""}